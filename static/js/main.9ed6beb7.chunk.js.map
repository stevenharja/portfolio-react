{"version":3,"sources":["components/ProjectCard/ProjectCard.js","components/LogoDrop/LogoDrop.js","components/Hero/Hero.js","components/Section/Section.js","components/EyesTrack/EyesTrack.js","components/Contacts/Contact/Contact.js","components/Contacts/Contacts.js","components/Quotenator/Quotenator.js","container/App/App.js","serviceWorker.js","index.js"],"names":["projectCard","props","projectImage","urlImage","imageUrl","process","src","className","alt","name","summary","href","urlProject","target","rel","urlGithub","logoDrop","right","delay","hero","top","title","section","paragraphs","paragraph","map","left","bottom","animation","eyesTrack","contact","logoUrl","svg","url","contacts","contactElements","key","quotenator","onClick","clicked","quote","author","App","state","projects","heroContent","sectionContent","quotes","person","quoteSelected","quoteRandomizer","Math","floor","random","length","setState","projectCards","sections","this","project","class","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","querySelector","createSquare","x","y","colors","color","square","createElement","classList","add","size","style","backgroundColor","width","height","getBoundingClientRect","offsetWidth","appendChild","setTimeout","remove","setInterval","addEventListener","e","clientX","clientY"],"mappings":"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","file":"static/js/main.9ed6beb7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ProjectCard.scss\";\r\n\r\nconst projectCard = (props) => {\r\n  let projectImage;\r\n  if (props.urlImage) {\r\n    const imageUrl = `${process.env.PUBLIC_URL}/assets/img/${props.urlImage}`;\r\n    projectImage = (\r\n      <img src={imageUrl} className=\"ProjectCard__img\" alt={props.name} />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"ProjectCard\">\r\n      <div className=\"ProjectCard__img-box\">{projectImage}</div>\r\n      <div className=\"ProjectCard__text\">\r\n        <div className=\"ProjectCard__title\">{props.name}</div>\r\n        <div className=\"ProjectCard__summary\">{props.summary}</div>\r\n        <div className=\"ProjectCard__links\">\r\n          <a\r\n            className=\"ProjectCard__link\"\r\n            href={props.urlProject}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Live Website\r\n          </a>\r\n          <a\r\n            className=\"ProjectCard__link\"\r\n            href={props.urlGithub}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            GitHub\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default projectCard;\r\n","import React from \"react\";\r\nimport \"./LogoDrop.scss\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst logoDrop = (props) => {\r\n  return (\r\n    <Fade right delay={1000}>\r\n      <span className=\"LogoDrop\">\r\n        <div className=\"LogoDrop__text\">SH</div>\r\n      </span>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default logoDrop;\r\n","import React from \"react\";\r\nimport \"./Hero.scss\";\r\nimport LogoDrop from \"../LogoDrop/LogoDrop\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst hero = (props) => {\r\n  return (\r\n    <div className=\"Hero\">\r\n      <Fade top>\r\n        <h1 className=\"Hero__title\">{props.title}</h1>\r\n      </Fade>\r\n      <LogoDrop />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default hero;\r\n","import React from \"react\";\r\nimport \"./Section.scss\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst section = (props) => {\r\n  const paragraphs = props.paragraph.map((paragraph) => {\r\n    return <p className=\"Section__paragraph\">{paragraph}</p>;\r\n  });\r\n  return (\r\n    <div className=\"Section\">\r\n      <Fade left>\r\n        <h2 className=\"Section__title Section__title--left\">{props.title}</h2>\r\n      </Fade>\r\n      <div className=\"Section__content\">\r\n        <Fade bottom>\r\n          <div className=\"Section__text\">{paragraphs}</div>\r\n        </Fade>\r\n        {props.animation}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default section;\r\n","import React from \"react\";\r\nimport \"./EyesTrack.scss\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst eyesTrack = (props) => {\r\n  return (\r\n    <Fade right>\r\n      <span className=\"EyesTrack\">\r\n        <span className=\"EyesTrack__eye EyesTrack__eye--left\"></span>\r\n        <span className=\"EyesTrack__eye EyesTrack__eye--right\"></span>\r\n      </span>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default eyesTrack;\r\n","import React from \"react\";\r\nimport \"./Contact.scss\";\r\n\r\nconst contact = (props) => {\r\n  const logoUrl = `${process.env.PUBLIC_URL}/assets/img/svg/${props.svg}`;\r\n  return (\r\n    <a className=\"Contact\" href={props.url}>\r\n      <div className=\"Contact__img-box\">\r\n        <img src={logoUrl} className=\"Contact__img\" alt={props.title} />\r\n      </div>\r\n      <div className=\"Contact__text\">{props.title}</div>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default contact;\r\n","import React from \"react\";\r\nimport \"./Contacts.scss\";\r\nimport Contact from \"./Contact/Contact\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst contacts = (props) => {\r\n  let contactElements = props.contacts.map((contact) => {\r\n    return (\r\n      <Contact\r\n        title={contact.title}\r\n        url={contact.url}\r\n        svg={contact.svg}\r\n        key={contact.title}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <Fade bottom>\r\n      <div className=\"Contacts\">\r\n        <h1 className=\"Contacts__title\">Contact Me!</h1>\r\n        <div className=\"Contacts__box\"> {contactElements}</div>\r\n      </div>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default contacts;\r\n","import React from \"react\";\r\nimport \"./Quotenator.scss\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst quotenator = (props) => {\r\n  return (\r\n    <Fade left delay={500}>\r\n      <button className=\"Quotenator\" onClick={props.clicked}>\r\n        <div className=\"Quotenator__quote\">{props.quote}</div>\r\n        <div className=\"Quotenator__author\">{props.author}</div>\r\n      </button>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default quotenator;\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport ProjectCard from \"../../components/ProjectCard/ProjectCard\";\nimport Hero from \"../../components/Hero/Hero\";\nimport Section from \"../../components/Section/Section\";\nimport EyesTrack from \"../../components/EyesTrack/EyesTrack\";\nimport Contacts from \"../../components/Contacts/Contacts\";\nimport Quotenator from \"../../components/Quotenator/Quotenator\";\nimport Fade from \"react-reveal/Fade\";\n\nclass App extends Component {\n  state = {\n    projects: [\n      {\n        name: \"Travelloging\",\n        summary:\n          \"Blogging-Oriented Website, Built With React And SCSS For Front-End, And Placeholder API For Blog Posts.\",\n        urlProject: \"https://stevenharja.github.io/travelloging-react/\",\n        urlGithub: \"https://github.com/stevenharja/travelloging-react\",\n        urlImage: \"travelloging.png\",\n      },\n      {\n        name: \"EVERFit\",\n        summary:\n          \"Health-Focused Website, Built With NodeJS As Back-End (See GitHub), And SCSS For Front-End.\",\n        urlProject: \"https://stevenharja.github.io/EVERFit-template/\",\n        urlGithub: \"https://github.com/stevenharja/EVERFit\",\n        urlImage: \"everfit.png\",\n      },\n      {\n        name: \"Trust Motors\",\n        summary: \"Vehicle Showroom Themed, Built Using SCSS For Front-End\",\n        urlProject: \"https://stevenharja.github.io/trust-motors/\",\n        urlGithub: \"https://github.com/stevenharja/trust-motors\",\n        urlImage: \"trust-motors.png\",\n      },\n      {\n        name: \"COVID-19 Tracker\",\n        summary:\n          \"Using Disease.SH API, Developed A COVID-19 Tracker With React, SCSS, Leaflet Map\",\n        urlProject: \"https://stevenharja.github.io/covid19-tracker/\",\n        urlGithub: \"https://github.com/stevenharja/EVERFit\",\n        urlImage: \"covid19tracker.png\",\n      },\n    ],\n    heroContent: {\n      title: \"I'm Steven, A Web Developer.\",\n    },\n    sectionContent: [\n      {\n        title: \"About Me\",\n        paragraph: [\n          \"Hello there! My name is Steven Harjapramana\",\n          \" I am a web developer with a passion of learning. My skills involves front-end development (SASS, React, CSS3, JS) and back-end development (NodeJS, CakePHP, PHP, SQL).\",\n          \"A dedication for learning and growth makes me to who I am today. If you could provide me with an opportunity to work with you, then just know that I always give the best in everything I do.\",\n        ],\n        animation: <EyesTrack />,\n      },\n    ],\n    contacts: [\n      {\n        title: \"LinkedIn\",\n        url: \"https://www.linkedin.com/in/steven-harjapramana/\",\n        svg: \"linkedin.svg\",\n      },\n      {\n        title: \"GitHub\",\n        url: \"https://github.com/stevenharja\",\n        svg: \"github.svg\",\n      },\n      {\n        title: \"Email Me!\",\n        url: \"mailto:stevenharja@gmail.com\",\n        svg: \"mail.svg\",\n      },\n    ],\n    quotes: [\n      {\n        quote: \"A smooth sea never made a skilled sailor.\",\n        person: \"Franklin D. Roosevelt\",\n      },\n      {\n        quote: \"One person can make a difference, and everyone should try.\",\n        person: \"John Fitzgerald Kennedy\",\n      },\n      {\n        quote: \"If you don't believe in yourself, no one will do it for you.\",\n        person: \"Kobe Bryant\",\n      },\n      {\n        quote:\n          \"If you look at what you have in life, you'll always have more. If you look at what you don't have in life, you'll never have enough.\",\n        person: \"Oprah Winfrey\",\n      },\n      {\n        quote:\n          \"The greatest glory in living lies not in never falling, but rising every time we fall\",\n        person: \"Nelson Mandella\",\n      },\n      {\n        quote: \"If there is no struggle, there is no progress\",\n        person: \"Frederick Douglass\",\n      },\n      {\n        quote:\n          \"We don't rise to the level of our expectation, we fall to the level of our training\",\n        person: \"David Goggins\",\n      },\n      {\n        quote: \"To learn to succeed, you must first learn to fail\",\n        person: \"Michael Jordan\",\n      },\n      {\n        quote: \"A person who never made a mistake never tried anything new.\",\n        person: \"Albert Einstein\",\n      },\n      {\n        quote: \"If we don't change, we don't grow, we aren't really living\",\n        person: \"Gail Sheehy\",\n      },\n    ],\n    quoteSelected: null,\n  };\n\n  quoteRandomizer = () => {\n    const quote = this.state.quotes[\n      Math.floor(Math.random() * this.state.quotes.length)\n    ];\n    this.setState({ quoteSelected: quote });\n  };\n  render() {\n    let projectCards;\n    let sections;\n    let contacts;\n    let quotenator;\n    if (this.state.projects) {\n      projectCards = this.state.projects.map((project) => {\n        return (\n          <ProjectCard\n            name={project.name}\n            summary={project.summary}\n            urlProject={project.urlProject}\n            urlGithub={project.urlGithub}\n            urlImage={project.urlImage}\n            key={project.name}\n          />\n        );\n      });\n    }\n    if (this.state.sectionContent) {\n      sections = this.state.sectionContent.map((section) => {\n        return (\n          <Section\n            title={section.title}\n            paragraph={section.paragraph}\n            animation={section.animation}\n            key={section.title}\n          />\n        );\n      });\n    }\n    if (this.state.contacts) {\n      contacts = <Contacts contacts={this.state.contacts} />;\n    }\n    if (this.state.quoteSelected) {\n      const quote = this.state.quoteSelected;\n      quotenator = (\n        <Quotenator\n          quote={quote.quote}\n          author={quote.person}\n          clicked={this.quoteRandomizer}\n        />\n      );\n    } else {\n      const quote = this.state.quotes[\n        Math.floor(Math.random() * this.state.quotes.length)\n      ];\n      quotenator = (\n        <Quotenator\n          quote={quote.quote}\n          author={quote.person}\n          clicked={this.quoteRandomizer}\n        />\n      );\n    }\n    return (\n      <div className=\"App\">\n        <Hero title={this.state.heroContent.title} />\n        <div className=\"App__section\">\n          <Fade right>\n            <h2 className=\"App__section-title App__section-title--right\">\n              My Projects\n            </h2>\n          </Fade>\n          {projectCards}\n          {sections}\n          {contacts}\n          {quotenator}\n          <p class=\"App__copyright\">Steven Harjapramana &copy; 2020. All Rights Reserved</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./container/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// Front End Code\nconst logoDrop = document.querySelector(\".LogoDrop\");\nlet createSquare = (x = null, y = null) => {\n  if (logoDrop) {\n    const colors = [\"#279D59\", \"#1E6163\", \"#FFFFFF\", \"#D82F35\"];\n    const color = colors[Math.floor(Math.random() * colors.length)];\n    const square = document.createElement(\"span\");\n    square.classList.add(\"bg-circle\");\n    let size = Math.random() * 50;\n\n    square.style.backgroundColor = color;\n    square.style.width = 20 + size + \"px\";\n    square.style.height = 20 + size + \"px\";\n    if (x && y) {\n      square.style.left = x - logoDrop.getBoundingClientRect().left + \"px\";\n      square.style.top = y - logoDrop.getBoundingClientRect().top + \"px\";\n    } else {\n      square.style.left = Math.random() * logoDrop.offsetWidth + \"px\";\n      square.style.top = \"-100px\";\n    }\n    logoDrop.appendChild(square);\n\n    setTimeout(() => {\n      square.remove();\n    }, 10000);\n  }\n};\nsetInterval(createSquare, 300);\n\nif (logoDrop) {\n  logoDrop.addEventListener(\"mousedown\", (e) => {\n    createSquare(e.clientX, e.clientY);\n  });\n}\n"],"sourceRoot":""}